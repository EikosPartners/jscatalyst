'use strict';












var _jestUtil = require('jest-util');
var _jestMock = require('jest-mock');var _jestMock2 = _interopRequireDefault(_jestMock);
var _jsdom = require('jsdom');var _jsdom2 = _interopRequireDefault(_jsdom);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

class JSDOMEnvironmentExternalScripts {





  constructor(config) {
    // lazy require
    this.document = _jsdom2.default.jsdom('<!DOCTYPE html>', {
      url: config.testURL,
      /* UPDATE start */
      // v9:
      // @see https://github.com/tmpvar/jsdom/tree/9.12.0#external-resources
      virtualConsole: _jsdom2.default.createVirtualConsole().sendTo(console),
      features: {
        FetchExternalResources: ["script", "link", "iframe"],
        ProcessExternalResources: ["script", "iframe"]

        // v10 (future):
        //@see https://github.com/tmpvar/jsdom#customizing-jsdom
        //runScripts: 'dangerously',
        //resources: 'usable',
        /* UPDATE end */ } });

    const window = this.document.defaultView;

    window.addEventListener("message", event => {
      console.log(event.data);
    });

    const global = this.global = this.document.defaultView;
    // Node's error-message stack size is limited at 10, but it's pretty useful
    // to see more than that when a test fails.
    this.global.Error.stackTraceLimit = 100;
    (0, _jestUtil.installCommonGlobals)(global, config.globals);

    this.moduleMocker = new _jestMock2.default.ModuleMocker(global);
    this.fakeTimers = new _jestUtil.FakeTimers(global, this.moduleMocker, config);
  }

  dispose() {
    if (this.fakeTimers) {
      this.fakeTimers.dispose();
    }
    if (this.global) {
      this.global.close();
    }
    this.global = null;
    this.document = null;
    this.fakeTimers = null;
  }

  runScript(script) {
    if (this.global) {
      return _jsdom2.default.evalVMScript(this.global, script);
    }
    return null;
  }} /**
      * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
      *
      * This source code is licensed under the MIT license found in the
      * LICENSE file in the root directory of this source tree.
      * 
      */module.exports = JSDOMEnvironmentExternalScripts;